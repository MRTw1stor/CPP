#include <windows.h>
#include <tchar.h>

// ?????? ?????? ? C++
const TCHAR* facts[] = {
    _T("C++ ??? ?????? ? 1979 ????"),
    _T("C++ ???????? ?????? ???????????????? ?????? ??????????"),
    _T("C++ ???????????? ????????-??????????????? ????????????????"),
};
int currentFactIndex = 0;  // ?????? ???????? ?????

// ?????????? ??????? ??????? ?????????
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    // ??????????? ?????? ????
    WNDCLASS wc = { 0 };
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInstance;
    wc.lpszClassName = _T("SimpleWindowClass");
    RegisterClass(&wc);

    // ???????? ????
    HWND hwnd = CreateWindow(
        _T("SimpleWindowClass"), _T("?????? ???????? ??????????"),
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT, 400, 200,
        NULL, NULL, hInstance, NULL
    );

    // ???????? ??????
    CreateWindow(
        _T("button"), _T("????? ????!"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        150, 70, 100, 30,
        hwnd, NULL, hInstance, NULL
    );

    // ??????????? ????
    ShowWindow(hwnd, nCmdShow);
    UpdateWindow(hwnd);

    // ???? ????????? ?????????
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return (int)msg.wParam;
}

// ??????????? ??????? ?????????
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    switch (message)
    {
    case WM_COMMAND:
        // ????? ???????? ????? ? ?????????? ???????? ???????
        MessageBox(hwnd, facts[currentFactIndex], _T("???? ? C++"), MB_OK);
        currentFactIndex = (currentFactIndex + 1) % (sizeof(facts) / sizeof(facts[0]));  // ??????? ? ?????????? ?????
        break;

    case WM_DESTROY:
        PostQuitMessage(0);
        break;

    default:
        return DefWindowProc(hwnd, message, wParam, lParam);
    }

    return 0;
}

